#!/bin/bash
#
# NextProperty AI Secret Key Management Utility
# Provides easy commands for secret key operations
#

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

show_help() {
    echo -e "${BLUE}NextProperty AI Secret Key Management${NC}"
    echo ""
    echo "Usage: $0 [COMMAND]"
    echo ""
    echo "Commands:"
    echo "  status      Check current secret key status"
    echo "  generate    Generate a new secret key"
    echo "  setup-cron  Set up automatic key rotation"
    echo "  help        Show this help message"
    echo ""
    echo "Examples:"
    echo "  $0 status       # Check if key needs rotation"
    echo "  $0 generate     # Generate new key manually"
    echo "  $0 setup-cron   # Set up monthly auto-rotation"
}

run_status() {
    echo -e "${BLUE}Checking secret key status...${NC}"
    python3 "$SCRIPT_DIR/check_secret_key.py"
}

run_generate() {
    echo -e "${BLUE}Generating new secret key...${NC}"
    python3 "$SCRIPT_DIR/generate_secret_key.py"
}

run_setup_cron() {
    echo -e "${BLUE}Setting up automatic secret key rotation...${NC}"
    "$SCRIPT_DIR/setup_secret_key_cron.sh"
}

# Main command handling
case "$1" in
    "status")
        run_status
        ;;
    "generate")
        run_generate
        ;;
    "setup-cron")
        run_setup_cron
        ;;
    "help"|"--help"|"-h"|"")
        show_help
        ;;
    *)
        echo -e "${RED}Error: Unknown command '$1'${NC}"
        echo ""
        show_help
        exit 1
        ;;
esac
